<template>
  <nav-bar title="分类" :back.user="navBarBack"/>
  <view class="category c-main c-main--has-nav-bar">
    <search-bar placeholder="输入你要搜索的分类" @confirm.user="handleSearchConfirm"/>
    <view class="category-ad">
      <c-swiper :items.sync="ads" width="100%" height="320rpx"/>
    </view>
    <!-- category-categories -->
    <view wx:if="{{categories.length}}" class="category-categories c-categories">
      <repeat for="{{categories}}" item="item">
        <navigator url="/pages/recommended-shops/index?id={{item.id}}&name={{item.name}}">
          <view class="c-categories__item c2 s4">
            <image src="{{item.image}}"/>
            {{item.name}}
          </view>
        </navigator>
      </repeat>
    </view>
    <!-- /category-categories -->
    <!-- category-no-data -->
    <view wx:else hidden="{{!pageLoaded}}" class="category-no-data">
      <view class="category-no-data__image"></view>
      <view class="category-no-data__tip c1 s4">没有搜到你想要的分类</view>
    </view>
    <!-- /category-no-data -->
  </view>
</template>

<style lang="scss" src="./styles.scss"></style>

<script>
  import wepy from 'wepy'
  import global from '../../mixins/global'
  import request from '../../utils/request'
  import NavBar from '../../components/nav-bar/index'
  import SearchBar from '../../components/search-bar/index'
  import Swiper from '../../components/swiper/index'

  let categories = []

  export default class extends wepy.page {
    config = {
      navigationBarTitleText: ''
    }

    components = {
      'nav-bar': NavBar,
      'search-bar': SearchBar,
      'c-swiper': Swiper
    }

    mixins = [global]

    data = {
      navBarBack: false,
      pageLoaded: false,
      ads: [],
      categories: [],
      hasNavBar: true
    }

    methods = {
      handleSearchConfirm (e) {
        this.categories = categories.filter(item => item.name.indexOf(e.detail.value) !== -1)
      }
    }

    async onLoad () {
      const homeGetAllClassesRes = await request({
        url: 'home/getAllClasses',
        method: 'POST',
        requiresLocation: true
      })

      this.pageLoaded = true

      this.ads = homeGetAllClassesRes.advs.map(item => {
        return {
          image: item.imageUrl,
          url: item.href || ''
        }
      })

      this.categories = homeGetAllClassesRes.recommendClasses.map(item => {
        return {
          id: item.gcId,
          name: item.gcName,
          image: item.gcImage
        }
      })

      categories = Array.from(this.categories)

      this.$apply()
    }
  }
</script>
