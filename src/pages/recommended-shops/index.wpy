<template>
  <nav-bar :title.sync="navBarTitle" :back.sync="navBarBack"/>
  <view class="recommended-shops c-main c-main--has-nav-bar">
    <repeat for="{{childCategories}}" item="item">
      <view class="recommended-shops-child-categories c-panel">
        <view class="c-panel__head c2 s1">{{item.name}}</view>
        <view class="c-panel__body">
          <view class="l-list">
            <repeat for="{{item.children}}" item="childItem" index="index">
              <view class="l-list__item">
                <view class="c-media">
                  <image src="{{childItem.image}}"/>
                  <view class="c-media__body">
                    <view class="c-media__body-title c2 s2">
                      {{childItem.name}}
                      <text class="recommended-shops-child-categories__enter-shop" wx:if="{{index === 0}}">进店</text>
                    </view>
                    <view class="c-media__body-content c3 s4">{{childItem.introduction}}</view>
                  </view>
                </view>
                <view class="c-tag c-tag--address c3 s6">{{childItem.distance}}</view>
                <view class="c-tag c-tag--fringe c7 s5" wx:if="{{index !== 0}}">您身边的品牌</view>
              </view>
            </repeat>
          </view>
        </view>
      </view>
    </repeat>
  </view>
</template>

<style lang="scss" src="./styles.scss"></style>

<script>
  import wepy from 'wepy'
  import global from '../../mixins/global'
  import NavBar from '../../components/nav-bar/index'
  import request from '../../utils/request'
  import filters from '../../utils/filters'

  export default class extends wepy.page {
    config = {
      navigationBarTitleText: ''
    }

    components = {
      'nav-bar': NavBar
    }

    mixins = [global]

    data = {
      id: 0,
      name: '',
      navBarBack: true,
      navBarTitle: '',
      childCategories: []
    }

    async onLoad (query) {
      this.id = query.id
      this.name = query.name
    }

    async onShow () {
      this.navBarTitle = `${this.name}店铺推荐`

      const storeGetRecommendStoresRes = await request({
        url: 'store/getRecommendStores',
        method: 'POST',
        data: {
          gcId: this.id
        }
      })

      this.childCategories = storeGetRecommendStoresRes.map(item => ({
        name: item.gcName,
        children: item.stores.map(childItem => ({
          name: childItem.storeName,
          image: childItem.storeLabel,
          introduction: childItem.storeIntro,
          distance: filters.distance(childItem.storeDistance),
          isPurchased: childItem.isPurchased
        }))
      }))

      this.$apply()
    }
  }
</script>
