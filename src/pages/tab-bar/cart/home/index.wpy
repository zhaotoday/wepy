<template>
  <view class="p-cart-home c-main m-has-nav-bar m-has-cart-settlement">
    <view class="n-no-data-wrap" wx:if="{{false}}">
      <c-swiper theme="third" :items.sync="ads" width="100%" height="320rpx" />
      <view class="n-no-data">
        <view class="n-no-data__image"></view>
        <view class="n-no-data__tip c1 s4">还是空的，去挑选喜欢的商品吧！</view>
        <view class="n-no-data__btn c-button m-orange m-height-88 c7 s0" @tap="switchTab('/pages/tab-bar/home/index')">
          去逛逛
        </view>
      </view>
    </view>
    <block wx:else>
      <operation title="管理" url="/pages/tab-bar/home/index" />
      <repeat for="{{items}}" item="item1">
        <view class="c-panel u-margin-bottom-20">
          <view class="c-panel__head padding-30 border-bottom-1">
            <view class="c-panel__head-title">
              <text class="c-checkbox" @tap.stop="check({{item1.storeCarts}})" />
              <text class="c-icon m-shop" style="margin-right: 20rpx;" />
              <text class="c2 s2">{{item1.storeName}}</text>
              <view class="c-panel__head-more" />
            </view>
          </view>
          <view class="c-panel__body">
            <repeat for="{{item1.storeCarts}}" item="item2">
              <movable-area class="o-cart-product">
                <movable-view class="c-cart-product" x="184rpx" direction="horizontal" inertia friction="0.1"
                              @touchstart="touchStart" @touchmove="touchMove">
                  <view class="c-checkbox" @tap.stop="check" />
                  <view class="o-media">
                    <image class="o-media__image" src="{{item2.goodsImage}}" />
                    <view class="o-media__body">
                      <view class="c-cart-product__title c2 s2">{{item2.goodsName}}</view>
                      <c-select class="t-1" customModal @showModal.user="showModalSpecification" />
                      <view class="c-cart-product__price c1 s2">¥{{item2.goodsPrice}}</view>
                      <number-input :value.sync="numberInputValue" />
                    </view>
                    <view class="c-cart-product__collect" />
                    <view class="c-cart-product__delete" />
                  </view>
                </movable-view>
              </movable-area>
            </repeat>
          </view>
        </view>
      </repeat>
    </block>
  </view>
  <cart-settlement />
  <c-modal-specification :details.sync="details" :formData.sync="formData" />
</template>

<style lang="scss" src="./styles.scss"></style>

<script>
  import wepy from 'wepy'
  import global from '../../../../mixins/global'
  import request from '../../../../utils/request'
  import Swiper from '../../../../components/swiper/index'
  import NumberInput from '../../../../components/number-input/index'
  import Select from '../../../../components/select/index'
  import CartSettlement from '../../../../components/cart-settlement/index'
  import ModalSpecification from '../../../../components/modal-specification/index'
  import Operation from '../../../../components/operation/index'

  export default class extends wepy.page {
    config = {
      navigationBarTitleText: '购物车'
    }

    components = {
      'c-swiper': Swiper,
      'number-input': NumberInput,
      'c-select': Select,
      'cart-settlement': CartSettlement,
      'operation': Operation,
      'c-modal-specification': ModalSpecification
    }

    mixins = [global]

    data = {
      ads: [],
      numberInputValue: 2,
      items: [],
      details: {},
      formData: {}
    }

    methods = {
      switchTab (url) {
        wepy.switchTab({ url })
      },
      touchStart (e) {
        console.log(e)
      },
      touchMove (e) {
        console.log(e)
      },
      showModalSpecification (e) {
        // this.$invoke('c-modal-specification', 'show')
      },
      check () {
        console.log(33)
      }
    }

    async onShow () {
      const cartGetRes = await request({
        requiresLogin: true,
        url: 'cart/get'
      })

      this.ads = cartGetRes.advs.map(item => ({
        image: item.imageUrl,
        url: item.href || ''
      }))

      this.items = cartGetRes.list

      this.$apply()
    }
  }
</script>
