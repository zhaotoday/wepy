@import "./variables";
@import "./functions";

/**
 * 文字垂直居中
 * @param {string} $height 高度
 */
@mixin text--middle($height) {
  height: $height;
  line-height: $height + px2rem(1px);
  overflow: hidden;
}

/**
 * 块级元素水平居中
 * @param {string} $width 宽度
 */
@mixin block--center() {
  margin-left: auto;
  margin-right: auto;
}

/**
 * 链接块化
 * @param {string} $width 宽度
 * @param {string} $height 高度
 */
@mixin link--block($width, $height) {
  display: block;
  text-decoration: none;
  width: $width;
  height: $height;
}

/**
 * 图片块化
 * @param {string} $width 宽度
 * @param {string} $height 高度
 */
@mixin img--block($width, $height) {
  display: block;
  width: $width;
  height: $height;
}

/**
 * 字体
 * @param {array} $fonts 字体列表
 * @param {number} $index 字体列表索引
 */
@mixin _font($fonts, $index) {
  $font: nth($fonts, $index);
  $font-size: nth($font, 1);

  font-size: $font-size;

  @if (length($font) == 2) {
    font-weight: nth($font, 2);
  }

  [data-dpr="2"] & {
    font-size: $font-size * 2;
  }

  [data-dpr="3"] & {
    font-size: $font-size * 3;
  }
}

/**
 * BEM block
 * @param {string} $block block 选择器
 */
@mixin b($block) {
  .#{$block} {
    @content;
  }
}

/**
 * BEM element
 * @param {string} $element element 选择器
 */
@mixin e($element) {
  &#{$element-separator + $element} {
    @content;
  }
}

/**
 * BEM modifier
 * @param {string} $modifier modifier 选择器
 */
@mixin m($modifier) {
  &#{$modifier-separator + $modifier} {
    @content;
  }
}

/**
 * 文字超出部分用省略号代替
 */
@mixin text--ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

/**
 * 清除浮动
 */
@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}
